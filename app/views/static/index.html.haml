#the-carousel.carousel.slide
  .carousel-inner
  
    .item.active
      = image_tag "slide-01.jpg", :alt => "slide 1"
      .container
        .carousel-caption
          %h1 Efficient.
          %p.lead 
            I used Ruby's CSV class for parsing (you can specify custom delimiters, e.g. tab spaces). 
            Activerecord-Import was also used to increse bulk insertion time by ~ 40%. Given the scope
            of the project, I decided it would be excessive to improve performance beyond this point. Currently,
            over 20,000 rows may be processed for reports.
          = link_to "Learn More", "http://ruby-doc.org/stdlib-1.9.2/libdoc/csv/rdoc/CSV.html", :title => "Sign up today", :class => 'btn btn-primary btn-large', :target => "_blank"
          
    .item
      = image_tag "slide-02.jpg", :alt => "slide 2"
      .container
        .carousel-caption
          %h1 Authentication.
          %p.lead Devise was used for a local authentication strategy. Users are required to sign up and log in before uploading any reports. Once registered, you can track, view, and organize all of your .tab reports in one place.
          %a.btn.btn-large.btn-primary{:href => "#"} Learn more
          
    .item
      = image_tag "slide-03.jpg", :alt => "slide 3"
      .container
        .carousel-caption
          %h1 Tested.
          %p.lead 
            I wrote unit tests for the models to demonstrate my familiarity with TDD. In a real-world application,
            the testing suite would include different forms of coverage as well (e.g. integration and controller tests), well organized mock-data, and javascript tests if a javascript MVC was used. 
          %a.btn.btn-large.btn-primary{:href => "#"} Browse gallery
          
  %a.left.carousel-control{"data-slide" => "prev", :href => "#the-carousel"} ‹
  %a.right.carousel-control{"data-slide" => "next", :href => "#the-carousel"} ›


.container.marketing

  .row
    .span4
      %h2 Efficient
      %p  
        I used Ruby's CSV class for parsing (you can specify custom delimiters, e.g. \t). 
        Activerecord-Import was also used to increse bulk insertion time by ~ 40%. Given the scope
        of the project, I decided it would be excessive to improve performance beyond this point. Currently,
        over 20,000 rows may be processed for reports.

    .span4
      %h2 Authentication
      %p Benchmarked to for up to 20,000 row
      %p
        %a.btn{:href => "#"} View details »

    .span4
      %h2 Tested
      %p 
        I wrote unit tests for the models to demonstrate my familiarity with TDD. In a real-world application,
        the testing suite would include different forms of coverage (e.g. integration and controller tests), well organized mock-data, and javascript tests if a javascript MVC was used. 
      %p
        %a.btn{:href => "#"} View details »



  %footer
    %p.pull-right
      %a{:href => "#"} Back to top
    %p
      \© 2013 Phillip Robertson. ·
